{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{pioneerApi}from'../services/api';import{usePioneer}from'../context/PioneerContext';export const usePioneerData=()=>{const{filters}=usePioneer();const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[pioneers,setPioneers]=useState([]);const fetchPioneers=useCallback(async()=>{try{setLoading(true);setError(null);const data=await pioneerApi.getPioneers(filters);setPioneers(data);}catch(err){setError(err instanceof Error?err.message:'Failed to fetch pioneer data');}finally{setLoading(false);}},[filters]);useEffect(()=>{fetchPioneers();},[fetchPioneers]);return{loading,error,pioneers,refresh:fetchPioneers};};export const usePioneerMetrics=address=>{const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[metrics,setMetrics]=useState(null);const fetchMetrics=useCallback(async()=>{try{setLoading(true);setError(null);const data=await pioneerApi.getPioneerMetrics(address);setMetrics(data);}catch(err){setError(err instanceof Error?err.message:'Failed to fetch pioneer metrics');}finally{setLoading(false);}},[address]);useEffect(()=>{fetchMetrics();},[fetchMetrics]);return{loading,error,metrics,refresh:fetchMetrics};};export const usePioneerActivity=address=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const recordProtocolDiscovery=async(protocol,success)=>{try{setLoading(true);setError(null);await pioneerApi.recordProtocolDiscovery(address,{protocol,success});}catch(err){setError(err instanceof Error?err.message:'Failed to record protocol discovery');throw err;}finally{setLoading(false);}};const recordStrategyDeployment=async(type,success,roi)=>{try{setLoading(true);setError(null);await pioneerApi.recordStrategyDeployment(address,{type,success,roi});}catch(err){setError(err instanceof Error?err.message:'Failed to record strategy deployment');throw err;}finally{setLoading(false);}};const updateChainActivity=async(chain,success)=>{try{setLoading(true);setError(null);await pioneerApi.updateChainActivity(address,{chain,success});}catch(err){setError(err instanceof Error?err.message:'Failed to update chain activity');throw err;}finally{setLoading(false);}};return{recordProtocolDiscovery,recordStrategyDeployment,updateChainActivity,loading,error};};","map":{"version":3,"names":["useState","useEffect","useCallback","pioneerApi","usePioneer","usePioneerData","filters","loading","setLoading","error","setError","pioneers","setPioneers","fetchPioneers","data","getPioneers","err","Error","message","refresh","usePioneerMetrics","address","metrics","setMetrics","fetchMetrics","getPioneerMetrics","usePioneerActivity","recordProtocolDiscovery","protocol","success","recordStrategyDeployment","type","roi","updateChainActivity","chain"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/hooks/usePioneerData.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { pioneerApi } from '../services/api';\nimport { PioneerCategory, PioneerMetrics } from '../types';\nimport { usePioneer } from '../context/PioneerContext';\n\ninterface UsePioneerDataReturn {\n  loading: boolean;\n  error: string | null;\n  pioneers: Array<{\n    address: string;\n    metrics: PioneerMetrics;\n    categories: PioneerCategory[];\n  }>;\n  refresh: () => Promise<void>;\n}\n\nexport const usePioneerData = (): UsePioneerDataReturn => {\n  const { filters } = usePioneer();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [pioneers, setPioneers] = useState<UsePioneerDataReturn['pioneers']>([]);\n\n  const fetchPioneers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneers(filters);\n      setPioneers(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer data');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    fetchPioneers();\n  }, [fetchPioneers]);\n\n  return {\n    loading,\n    error,\n    pioneers,\n    refresh: fetchPioneers\n  };\n};\n\ninterface UsePioneerMetricsReturn {\n  loading: boolean;\n  error: string | null;\n  metrics: PioneerMetrics | null;\n  refresh: () => Promise<void>;\n}\n\nexport const usePioneerMetrics = (address: string): UsePioneerMetricsReturn => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [metrics, setMetrics] = useState<PioneerMetrics | null>(null);\n\n  const fetchMetrics = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneerMetrics(address);\n      setMetrics(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer metrics');\n    } finally {\n      setLoading(false);\n    }\n  }, [address]);\n\n  useEffect(() => {\n    fetchMetrics();\n  }, [fetchMetrics]);\n\n  return {\n    loading,\n    error,\n    metrics,\n    refresh: fetchMetrics\n  };\n};\n\ninterface UsePioneerActivityReturn {\n  recordProtocolDiscovery: (protocol: string, success: boolean) => Promise<void>;\n  recordStrategyDeployment: (type: string, success: boolean, roi?: number) => Promise<void>;\n  updateChainActivity: (chain: string, success: boolean) => Promise<void>;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const usePioneerActivity = (address: string): UsePioneerActivityReturn => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const recordProtocolDiscovery = async (protocol: string, success: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordProtocolDiscovery(address, { protocol, success });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record protocol discovery');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recordStrategyDeployment = async (type: string, success: boolean, roi?: number) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordStrategyDeployment(address, { type, success, roi });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record strategy deployment');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateChainActivity = async (chain: string, success: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.updateChainActivity(address, { chain, success });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to update chain activity');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    recordProtocolDiscovery,\n    recordStrategyDeployment,\n    updateChainActivity,\n    loading,\n    error\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}