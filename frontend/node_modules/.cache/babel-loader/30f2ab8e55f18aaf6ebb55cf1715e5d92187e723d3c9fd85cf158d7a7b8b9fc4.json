{"ast":null,"code":"var _jsxFileName = \"/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/context/AppContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\nimport notificationService from '../services/NotificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  signals: [],\n  wallets: [],\n  isConnected: false,\n  error: null\n};\nconst AppContext = /*#__PURE__*/createContext(undefined);\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SIGNALS':\n      return {\n        ...state,\n        signals: action.payload\n      };\n    case 'ADD_SIGNAL':\n      return {\n        ...state,\n        signals: [action.payload, ...state.signals]\n      };\n    case 'SET_WALLETS':\n      return {\n        ...state,\n        wallets: action.payload\n      };\n    case 'ADD_WALLET':\n      return {\n        ...state,\n        wallets: [...state.wallets, action.payload]\n      };\n    case 'REMOVE_WALLET':\n      return {\n        ...state,\n        wallets: state.wallets.filter(w => w.address !== action.payload)\n      };\n    case 'SET_CONNECTION':\n      return {\n        ...state,\n        isConnected: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport function AppProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  useEffect(() => {\n    // Initialize notification service\n    notificationService.initialize();\n\n    // Initialize WebSocket connection\n    apiService.connectWebSocket();\n\n    // Set up WebSocket event handlers\n    apiService.addMessageHandler('new_signal', data => {\n      const signal = data.signal;\n      dispatch({\n        type: 'ADD_SIGNAL',\n        payload: signal\n      });\n      notificationService.notifyNewSignal(signal);\n    });\n    apiService.addMessageHandler('connection_status', data => {\n      const isConnected = data.connected;\n      dispatch({\n        type: 'SET_CONNECTION',\n        payload: isConnected\n      });\n      notificationService.notifyConnectionStatus(isConnected);\n    });\n\n    // Load initial data\n    const loadInitialData = async () => {\n      try {\n        const [signalsData, walletsData] = await Promise.all([apiService.getSignals(), apiService.getWallets()]);\n        dispatch({\n          type: 'SET_SIGNALS',\n          payload: signalsData.signals\n        });\n        dispatch({\n          type: 'SET_WALLETS',\n          payload: walletsData.wallets\n        });\n      } catch (error) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load initial data'\n        });\n      }\n    };\n    loadInitialData();\n\n    // Cleanup\n    return () => {\n      apiService.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport function useApp() {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useSignals() {\n  _s3();\n  const {\n    state\n  } = useApp();\n  return state.signals;\n}\n_s3(useSignals, \"4T9imRGE2C10qdYg9OIaug00+PA=\", false, function () {\n  return [useApp];\n});\nexport function useWallets() {\n  _s4();\n  const {\n    state\n  } = useApp();\n  return state.wallets;\n}\n_s4(useWallets, \"4T9imRGE2C10qdYg9OIaug00+PA=\", false, function () {\n  return [useApp];\n});\nexport function useConnection() {\n  _s5();\n  const {\n    state\n  } = useApp();\n  return state.isConnected;\n}\n_s5(useConnection, \"4T9imRGE2C10qdYg9OIaug00+PA=\", false, function () {\n  return [useApp];\n});\nexport function useAppError() {\n  _s6();\n  const {\n    state\n  } = useApp();\n  return state.error;\n}\n_s6(useAppError, \"4T9imRGE2C10qdYg9OIaug00+PA=\", false, function () {\n  return [useApp];\n});\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","notificationService","jsxDEV","_jsxDEV","initialState","signals","wallets","isConnected","error","AppContext","undefined","appReducer","state","action","type","payload","filter","w","address","AppProvider","children","_s","dispatch","initialize","connectWebSocket","addMessageHandler","data","signal","notifyNewSignal","connected","notifyConnectionStatus","loadInitialData","signalsData","walletsData","Promise","all","getSignals","getWallets","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","useSignals","_s3","useWallets","_s4","useConnection","_s5","useAppError","_s6","$RefreshReg$"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { Signal, Wallet } from '../types';\nimport apiService from '../services/api';\nimport notificationService from '../services/NotificationService';\n\ninterface AppState {\n  signals: Signal[];\n  wallets: Wallet[];\n  isConnected: boolean;\n  error: string | null;\n}\n\ntype AppAction =\n  | { type: 'SET_SIGNALS'; payload: Signal[] }\n  | { type: 'ADD_SIGNAL'; payload: Signal }\n  | { type: 'SET_WALLETS'; payload: Wallet[] }\n  | { type: 'ADD_WALLET'; payload: Wallet }\n  | { type: 'REMOVE_WALLET'; payload: string }\n  | { type: 'SET_CONNECTION'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null };\n\nconst initialState: AppState = {\n  signals: [],\n  wallets: [],\n  isConnected: false,\n  error: null,\n};\n\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AppAction>;\n} | undefined>(undefined);\n\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case 'SET_SIGNALS':\n      return { ...state, signals: action.payload };\n    case 'ADD_SIGNAL':\n      return { ...state, signals: [action.payload, ...state.signals] };\n    case 'SET_WALLETS':\n      return { ...state, wallets: action.payload };\n    case 'ADD_WALLET':\n      return { ...state, wallets: [...state.wallets, action.payload] };\n    case 'REMOVE_WALLET':\n      return {\n        ...state,\n        wallets: state.wallets.filter((w) => w.address !== action.payload),\n      };\n    case 'SET_CONNECTION':\n      return { ...state, isConnected: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function AppProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    // Initialize notification service\n    notificationService.initialize();\n\n    // Initialize WebSocket connection\n    apiService.connectWebSocket();\n\n    // Set up WebSocket event handlers\n    apiService.addMessageHandler('new_signal', (data) => {\n      const signal = data.signal;\n      dispatch({ type: 'ADD_SIGNAL', payload: signal });\n      notificationService.notifyNewSignal(signal);\n    });\n\n    apiService.addMessageHandler('connection_status', (data) => {\n      const isConnected = data.connected;\n      dispatch({ type: 'SET_CONNECTION', payload: isConnected });\n      notificationService.notifyConnectionStatus(isConnected);\n    });\n\n    // Load initial data\n    const loadInitialData = async () => {\n      try {\n        const [signalsData, walletsData] = await Promise.all([\n          apiService.getSignals(),\n          apiService.getWallets(),\n        ]);\n\n        dispatch({ type: 'SET_SIGNALS', payload: signalsData.signals });\n        dispatch({ type: 'SET_WALLETS', payload: walletsData.wallets });\n      } catch (error) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load initial data',\n        });\n      }\n    };\n\n    loadInitialData();\n\n    // Cleanup\n    return () => {\n      apiService.disconnect();\n    };\n  }, []);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useApp() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n\nexport function useSignals() {\n  const { state } = useApp();\n  return state.signals;\n}\n\nexport function useWallets() {\n  const { state } = useApp();\n  return state.wallets;\n}\n\nexport function useConnection() {\n  const { state } = useApp();\n  return state.isConnected;\n}\n\nexport function useAppError() {\n  const { state } = useApp();\n  return state.error;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}