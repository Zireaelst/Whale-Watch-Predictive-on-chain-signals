{"ast":null,"code":"import React from'react';import{CircularProgress,Box,Typography}from'@mui/material';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const LoadingSpinner=_ref=>{let{message='Loading...',fullScreen=false}=_ref;const content=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CircularProgress,{size:40}),message&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",sx:{mt:2,textAlign:'center'},children:message})]});if(fullScreen){return/*#__PURE__*/_jsx(Box,{sx:{position:'fixed',top:0,left:0,right:0,bottom:0,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',bgcolor:theme=>theme.palette.mode==='light'?'rgba(255, 255, 255, 0.8)':'rgba(0, 0, 0, 0.8)',zIndex:theme=>theme.zIndex.modal+1},children:content});}return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',p:3},children:content});};export default LoadingSpinner;","map":{"version":3,"names":["React","CircularProgress","Box","Typography","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoadingSpinner","_ref","message","fullScreen","content","children","size","variant","color","sx","mt","textAlign","position","top","left","right","bottom","display","flexDirection","alignItems","justifyContent","bgcolor","theme","palette","mode","zIndex","modal","p"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\nimport { CircularProgress, Box, Typography } from '@mui/material';\n\ninterface LoadingSpinnerProps {\n  message?: string;\n  fullScreen?: boolean;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  message = 'Loading...',\n  fullScreen = false,\n}) => {\n  const content = (\n    <>\n      <CircularProgress size={40} />\n      {message && (\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          sx={{ mt: 2, textAlign: 'center' }}\n        >\n          {message}\n        </Typography>\n      )}\n    </>\n  );\n\n  if (fullScreen) {\n    return (\n      <Box\n        sx={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          bgcolor: (theme) =>\n            theme.palette.mode === 'light'\n              ? 'rgba(255, 255, 255, 0.8)'\n              : 'rgba(0, 0, 0, 0.8)',\n          zIndex: (theme) => theme.zIndex.modal + 1,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 3,\n      }}\n    >\n      {content}\n    </Box>\n  );\n};\n\nexport default LoadingSpinner;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,CAAEC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOlE,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAGhD,IAHiD,CACrDC,OAAO,CAAG,YAAY,CACtBC,UAAU,CAAG,KACf,CAAC,CAAAF,IAAA,CACC,KAAM,CAAAG,OAAO,cACXL,KAAA,CAAAF,SAAA,EAAAQ,QAAA,eACEV,IAAA,CAACJ,gBAAgB,EAACe,IAAI,CAAE,EAAG,CAAE,CAAC,CAC7BJ,OAAO,eACNP,IAAA,CAACF,UAAU,EACTc,OAAO,CAAC,OAAO,CACfC,KAAK,CAAC,eAAe,CACrBC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAN,QAAA,CAElCH,OAAO,CACE,CACb,EACD,CACH,CAED,GAAIC,UAAU,CAAE,CACd,mBACER,IAAA,CAACH,GAAG,EACFiB,EAAE,CAAE,CACFG,QAAQ,CAAE,OAAO,CACjBC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,OAAO,CAAGC,KAAK,EACbA,KAAK,CAACC,OAAO,CAACC,IAAI,GAAK,OAAO,CAC1B,0BAA0B,CAC1B,oBAAoB,CAC1BC,MAAM,CAAGH,KAAK,EAAKA,KAAK,CAACG,MAAM,CAACC,KAAK,CAAG,CAC1C,CAAE,CAAArB,QAAA,CAEDD,OAAO,CACL,CAAC,CAEV,CAEA,mBACET,IAAA,CAACH,GAAG,EACFiB,EAAE,CAAE,CACFQ,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBO,CAAC,CAAE,CACL,CAAE,CAAAtB,QAAA,CAEDD,OAAO,CACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}