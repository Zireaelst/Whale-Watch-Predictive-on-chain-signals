{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Drawer,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,Typography,Box,Divider,Tooltip,Chip}from'@mui/material';import{Delete as DeleteIcon,Clear as ClearIcon}from'@mui/icons-material';import{useSignals}from'../context/AppContext';import{formatDistanceToNow}from'date-fns';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationCenter=_ref=>{let{open,onClose}=_ref;const signals=useSignals();const[notifications,setNotifications]=useState([]);const[unreadCount,setUnreadCount]=useState(0);useEffect(()=>{// Load stored notifications from localStorage\nconst storedNotifications=localStorage.getItem('notifications');if(storedNotifications){setNotifications(JSON.parse(storedNotifications));}},[]);useEffect(()=>{// Update unread count\nconst lastRead=localStorage.getItem('lastNotificationRead');const lastReadTime=lastRead?new Date(lastRead).getTime():0;setUnreadCount(notifications.filter(n=>new Date(n.timestamp).getTime()>lastReadTime).length);},[notifications]);const handleNotificationClick=useCallback(notification=>{if(notification.signal){// Handle signal-related notification clicks\n// This could open the signal details dialog\n}},[]);const handleDeleteNotification=useCallback(id=>{setNotifications(prev=>{const updated=prev.filter(n=>n.id!==id);localStorage.setItem('notifications',JSON.stringify(updated));return updated;});},[]);const handleClearAll=useCallback(()=>{setNotifications([]);localStorage.setItem('notifications','[]');},[]);const markAllAsRead=useCallback(()=>{localStorage.setItem('lastNotificationRead',new Date().toISOString());setUnreadCount(0);},[]);useEffect(()=>{if(open){markAllAsRead();}},[open,markAllAsRead]);return/*#__PURE__*/_jsxs(Drawer,{anchor:\"right\",open:open,onClose:onClose,sx:{'& .MuiDrawer-paper':{width:{xs:'100%',sm:400}}},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2},children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Notifications\",unreadCount>0&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${unreadCount} new`,color:\"primary\",sx:{ml:1}})]}),/*#__PURE__*/_jsx(IconButton,{onClick:handleClearAll,title:\"Clear all notifications\",children:/*#__PURE__*/_jsx(ClearIcon,{})})]})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(List,{sx:{flexGrow:1,overflowY:'auto'},children:notifications.length===0?/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No notifications\",secondary:\"New notifications will appear here\"})}):notifications.map(notification=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:()=>handleNotificationClick(notification),children:[/*#__PURE__*/_jsx(ListItemText,{primary:notification.title,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"body2\",color:\"textSecondary\",children:notification.message}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"caption\",color:\"textSecondary\",children:formatDistanceToNow(new Date(notification.timestamp),{addSuffix:true})})]})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(Tooltip,{title:\"Delete notification\",children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>handleDeleteNotification(notification.id),size:\"small\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})})})]}),/*#__PURE__*/_jsx(Divider,{})]},notification.id))})]});};export default NotificationCenter;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Drawer","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Typography","Box","Divider","Tooltip","Chip","Delete","DeleteIcon","Clear","ClearIcon","useSignals","formatDistanceToNow","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NotificationCenter","_ref","open","onClose","signals","notifications","setNotifications","unreadCount","setUnreadCount","storedNotifications","localStorage","getItem","JSON","parse","lastRead","lastReadTime","Date","getTime","filter","n","timestamp","length","handleNotificationClick","notification","signal","handleDeleteNotification","id","prev","updated","setItem","stringify","handleClearAll","markAllAsRead","toISOString","anchor","sx","width","xs","sm","children","p","display","justifyContent","alignItems","variant","size","label","color","ml","onClick","title","flexGrow","overflowY","primary","secondary","map","button","component","message","addSuffix","edge"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/components/NotificationCenter.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  Box,\n  Divider,\n  Badge,\n  Tooltip,\n  Chip,\n} from '@mui/material';\nimport {\n  Delete as DeleteIcon,\n  Clear as ClearIcon,\n  Notifications as NotificationsIcon,\n} from '@mui/icons-material';\nimport { useSignals } from '../context/AppContext';\nimport { Signal } from '../types';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface StoredNotification {\n  id: string;\n  title: string;\n  message: string;\n  timestamp: string;\n  priority: number;\n  signal?: Signal;\n}\n\ninterface NotificationCenterProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NotificationCenter: React.FC<NotificationCenterProps> = ({ open, onClose }) => {\n  const signals = useSignals();\n  const [notifications, setNotifications] = useState<StoredNotification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  useEffect(() => {\n    // Load stored notifications from localStorage\n    const storedNotifications = localStorage.getItem('notifications');\n    if (storedNotifications) {\n      setNotifications(JSON.parse(storedNotifications));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update unread count\n    const lastRead = localStorage.getItem('lastNotificationRead');\n    const lastReadTime = lastRead ? new Date(lastRead).getTime() : 0;\n    \n    setUnreadCount(\n      notifications.filter(n => new Date(n.timestamp).getTime() > lastReadTime).length\n    );\n  }, [notifications]);\n\n  const handleNotificationClick = useCallback((notification: StoredNotification) => {\n    if (notification.signal) {\n      // Handle signal-related notification clicks\n      // This could open the signal details dialog\n    }\n  }, []);\n\n  const handleDeleteNotification = useCallback((id: string) => {\n    setNotifications(prev => {\n      const updated = prev.filter(n => n.id !== id);\n      localStorage.setItem('notifications', JSON.stringify(updated));\n      return updated;\n    });\n  }, []);\n\n  const handleClearAll = useCallback(() => {\n    setNotifications([]);\n    localStorage.setItem('notifications', '[]');\n  }, []);\n\n  const markAllAsRead = useCallback(() => {\n    localStorage.setItem('lastNotificationRead', new Date().toISOString());\n    setUnreadCount(0);\n  }, []);\n\n  useEffect(() => {\n    if (open) {\n      markAllAsRead();\n    }\n  }, [open, markAllAsRead]);\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      sx={{ '& .MuiDrawer-paper': { width: { xs: '100%', sm: 400 } } }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">\n            Notifications\n            {unreadCount > 0 && (\n              <Chip\n                size=\"small\"\n                label={`${unreadCount} new`}\n                color=\"primary\"\n                sx={{ ml: 1 }}\n              />\n            )}\n          </Typography>\n          <IconButton onClick={handleClearAll} title=\"Clear all notifications\">\n            <ClearIcon />\n          </IconButton>\n        </Box>\n      </Box>\n      <Divider />\n      <List sx={{ flexGrow: 1, overflowY: 'auto' }}>\n        {notifications.length === 0 ? (\n          <ListItem>\n            <ListItemText\n              primary=\"No notifications\"\n              secondary=\"New notifications will appear here\"\n            />\n          </ListItem>\n        ) : (\n          notifications.map(notification => (\n            <React.Fragment key={notification.id}>\n              <ListItem\n                button\n                onClick={() => handleNotificationClick(notification)}\n              >\n                <ListItemText\n                  primary={notification.title}\n                  secondary={\n                    <>\n                      <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                        {notification.message}\n                      </Typography>\n                      <br />\n                      <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                        {formatDistanceToNow(new Date(notification.timestamp), { addSuffix: true })}\n                      </Typography>\n                    </>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Delete notification\">\n                    <IconButton\n                      edge=\"end\"\n                      onClick={() => handleDeleteNotification(notification.id)}\n                      size=\"small\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider />\n            </React.Fragment>\n          ))\n        )}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default NotificationCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}