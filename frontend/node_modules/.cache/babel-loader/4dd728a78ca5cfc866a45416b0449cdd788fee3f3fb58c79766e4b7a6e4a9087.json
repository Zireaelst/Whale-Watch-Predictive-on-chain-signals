{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';export const pioneerApi={connectWebSocket:()=>{// Implement WebSocket connection logic here\nconst ws=new WebSocket('your-websocket-url');ws.onopen=()=>{console.log('WebSocket connection established');};ws.onerror=error=>{console.error('WebSocket error:',error);};return ws;},addMessageHandler:(event,handler)=>{const ws=pioneerApi.connectWebSocket();ws.addEventListener('message',message=>{const data=JSON.parse(message.data);if(data.type===event){handler(data.payload);}});},getSignals:async()=>{const response=await axios.get(`${API_BASE_URL}/signals`);return response.data;},getPioneers:async filters=>{const response=await axios.get(`${API_BASE_URL}/pioneers`,{params:filters});return response.data;},getPioneerMetrics:async address=>{const response=await axios.get(`${API_BASE_URL}/pioneers/${address}/metrics`);return response.data;},recordProtocolDiscovery:async(address,data)=>{const response=await axios.post(`/pioneers/${address}/protocol-discovery`,data);return response.data;},recordStrategyDeployment:async(address,data)=>{const response=await axios.post(`/pioneers/${address}/strategy-deployment`,data);return response.data;},updateChainActivity:async(address,data)=>{const response=await axios.post(`/pioneers/${address}/chain-activity`,data);return response.data;},// Shared Protocol Methods\nasync recordProtocolInteraction(data){const response=await axios.post(`${API_BASE_URL}/pioneers/protocols/interaction`,data);return response.data;},async getProtocolTrends(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'7d';const response=await axios.get(`${API_BASE_URL}/pioneers/protocols/trends`,{params:{timeframe}});return response.data;},async getRelatedPioneers(protocolAddress){const response=await axios.get(`${API_BASE_URL}/pioneers/protocols/${protocolAddress}/pioneers`);return response.data;},async getPioneerProtocols(address){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const response=await axios.get(`${API_BASE_URL}/pioneers/${address}/protocols`,{params:options});return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","pioneerApi","connectWebSocket","ws","WebSocket","onopen","console","log","onerror","error","addMessageHandler","event","handler","addEventListener","message","data","JSON","parse","type","payload","getSignals","response","get","getPioneers","filters","params","getPioneerMetrics","address","recordProtocolDiscovery","post","recordStrategyDeployment","updateChainActivity","recordProtocolInteraction","getProtocolTrends","timeframe","arguments","length","undefined","getRelatedPioneers","protocolAddress","getPioneerProtocols","options"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { PioneerMetrics, PioneerCategory } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nexport interface ProtocolInteraction {\n  protocolAddress: string;\n  protocolName: string;\n  pioneerAddress: string;\n  success: boolean;\n  relatedTokens?: string[];\n}\n\nexport const pioneerApi = {\n  connectWebSocket: () => {\n    // Implement WebSocket connection logic here\n    const ws = new WebSocket('your-websocket-url');\n    \n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return ws;\n  },\n\n  addMessageHandler: <T>(event: string, handler: (data: T) => void) => {\n    const ws = pioneerApi.connectWebSocket();\n    ws.addEventListener('message', (message) => {\n      const data = JSON.parse(message.data);\n      if (data.type === event) {\n        handler(data.payload);\n      }\n    });\n  },\n  \n  getSignals: async () => {\n    const response = await axios.get(`${API_BASE_URL}/signals`);\n    return response.data;\n  },\n\n  getPioneers: async (filters?: {\n    categories?: PioneerCategory[];\n    minSuccessRate?: number;\n    chains?: string[];\n  }) => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers`, { params: filters });\n    return response.data;\n  },\n\n  getPioneerMetrics: async (address: string) => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/${address}/metrics`);\n    return response.data as PioneerMetrics;\n  },\n\n  recordProtocolDiscovery: async (address: string, data: {\n    protocol: string;\n    success: boolean;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/protocol-discovery`, data);\n    return response.data;\n  },\n\n  recordStrategyDeployment: async (address: string, data: {\n    type: string;\n    success: boolean;\n    roi?: number;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/strategy-deployment`, data);\n    return response.data;\n  },\n\n  updateChainActivity: async (address: string, data: {\n    chain: string;\n    success: boolean;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/chain-activity`, data);\n    return response.data;\n  },\n\n  // Shared Protocol Methods\n  async recordProtocolInteraction(data: ProtocolInteraction) {\n    const response = await axios.post(\n      `${API_BASE_URL}/pioneers/protocols/interaction`,\n      data\n    );\n    return response.data;\n  },\n\n  async getProtocolTrends(timeframe: '24h' | '7d' | '30d' = '7d') {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/protocols/trends`,\n      { params: { timeframe } }\n    );\n    return response.data;\n  },\n\n  async getRelatedPioneers(protocolAddress: string) {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/protocols/${protocolAddress}/pioneers`\n    );\n    return response.data;\n  },\n\n  async getPioneerProtocols(\n    address: string,\n    options: {\n      limit?: number;\n      offset?: number;\n      sortBy?: string;\n      sortOrder?: 1 | -1;\n    } = {}\n  ) {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/${address}/protocols`,\n      { params: options }\n    );\n    return response.data;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}