{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport const pioneerApi = {\n  connectWebSocket: () => {\n    // Implement WebSocket connection logic here\n    const ws = new WebSocket('your-websocket-url');\n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return ws;\n  },\n  addMessageHandler: (event, handler) => {\n    const ws = pioneerApi.connectWebSocket();\n    ws.addEventListener('message', message => {\n      const data = JSON.parse(message.data);\n      if (data.type === event) {\n        handler(data.payload);\n      }\n    });\n  },\n  getSignals: async () => {\n    const response = await axios.get(`${API_BASE_URL}/signals`);\n    return response.data;\n  },\n  getPioneers: async filters => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers`, {\n      params: filters\n    });\n    return response.data;\n  },\n  getPioneerMetrics: async address => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/${address}/metrics`);\n    return response.data;\n  },\n  recordProtocolDiscovery: async (address, data) => {\n    const response = await axios.post(`/pioneers/${address}/protocol-discovery`, data);\n    return response.data;\n  },\n  recordStrategyDeployment: async (address, data) => {\n    const response = await axios.post(`/pioneers/${address}/strategy-deployment`, data);\n    return response.data;\n  },\n  updateChainActivity: async (address, data) => {\n    const response = await axios.post(`/pioneers/${address}/chain-activity`, data);\n    return response.data;\n  },\n  // Shared Protocol Methods\n  async recordProtocolInteraction(data) {\n    const response = await axios.post(`${API_BASE_URL}/pioneers/protocols/interaction`, data);\n    return response.data;\n  },\n  async getProtocolTrends(timeframe = '7d') {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/protocols/trends`, {\n      params: {\n        timeframe\n      }\n    });\n    return response.data;\n  },\n  async getRelatedPioneers(protocolAddress) {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/protocols/${protocolAddress}/pioneers`);\n    return response.data;\n  },\n  async getPioneerProtocols(address, options = {}) {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/${address}/protocols`, {\n      params: options\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","pioneerApi","connectWebSocket","ws","WebSocket","onopen","console","log","onerror","error","addMessageHandler","event","handler","addEventListener","message","data","JSON","parse","type","payload","getSignals","response","get","getPioneers","filters","params","getPioneerMetrics","address","recordProtocolDiscovery","post","recordStrategyDeployment","updateChainActivity","recordProtocolInteraction","getProtocolTrends","timeframe","getRelatedPioneers","protocolAddress","getPioneerProtocols","options"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { PioneerMetrics, PioneerCategory } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nexport interface ProtocolInteraction {\n  protocolAddress: string;\n  protocolName: string;\n  pioneerAddress: string;\n  success: boolean;\n  relatedTokens?: string[];\n}\n\nexport const pioneerApi = {\n  connectWebSocket: () => {\n    // Implement WebSocket connection logic here\n    const ws = new WebSocket('your-websocket-url');\n    \n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return ws;\n  },\n\n  addMessageHandler: <T>(event: string, handler: (data: T) => void) => {\n    const ws = pioneerApi.connectWebSocket();\n    ws.addEventListener('message', (message) => {\n      const data = JSON.parse(message.data);\n      if (data.type === event) {\n        handler(data.payload);\n      }\n    });\n  },\n  \n  getSignals: async () => {\n    const response = await axios.get(`${API_BASE_URL}/signals`);\n    return response.data;\n  },\n\n  getPioneers: async (filters?: {\n    categories?: PioneerCategory[];\n    minSuccessRate?: number;\n    chains?: string[];\n  }) => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers`, { params: filters });\n    return response.data;\n  },\n\n  getPioneerMetrics: async (address: string) => {\n    const response = await axios.get(`${API_BASE_URL}/pioneers/${address}/metrics`);\n    return response.data as PioneerMetrics;\n  },\n\n  recordProtocolDiscovery: async (address: string, data: {\n    protocol: string;\n    success: boolean;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/protocol-discovery`, data);\n    return response.data;\n  },\n\n  recordStrategyDeployment: async (address: string, data: {\n    type: string;\n    success: boolean;\n    roi?: number;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/strategy-deployment`, data);\n    return response.data;\n  },\n\n  updateChainActivity: async (address: string, data: {\n    chain: string;\n    success: boolean;\n  }) => {\n    const response = await axios.post(`/pioneers/${address}/chain-activity`, data);\n    return response.data;\n  },\n\n  // Shared Protocol Methods\n  async recordProtocolInteraction(data: ProtocolInteraction) {\n    const response = await axios.post(\n      `${API_BASE_URL}/pioneers/protocols/interaction`,\n      data\n    );\n    return response.data;\n  },\n\n  async getProtocolTrends(timeframe: '24h' | '7d' | '30d' = '7d') {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/protocols/trends`,\n      { params: { timeframe } }\n    );\n    return response.data;\n  },\n\n  async getRelatedPioneers(protocolAddress: string) {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/protocols/${protocolAddress}/pioneers`\n    );\n    return response.data;\n  },\n\n  async getPioneerProtocols(\n    address: string,\n    options: {\n      limit?: number;\n      offset?: number;\n      sortBy?: string;\n      sortOrder?: 1 | -1;\n    } = {}\n  ) {\n    const response = await axios.get(\n      `${API_BASE_URL}/pioneers/${address}/protocols`,\n      { params: options }\n    );\n    return response.data;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAUjF,OAAO,MAAMC,UAAU,GAAG;EACxBC,gBAAgB,EAAEA,CAAA,KAAM;IACtB;IACA,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,oBAAoB,CAAC;IAE9CD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAEDJ,EAAE,CAACK,OAAO,GAAIC,KAAK,IAAK;MACtBH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAED,OAAON,EAAE;EACX,CAAC;EAEDO,iBAAiB,EAAEA,CAAIC,KAAa,EAAEC,OAA0B,KAAK;IACnE,MAAMT,EAAE,GAAGF,UAAU,CAACC,gBAAgB,CAAC,CAAC;IACxCC,EAAE,CAACU,gBAAgB,CAAC,SAAS,EAAGC,OAAO,IAAK;MAC1C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;MACrC,IAAIA,IAAI,CAACG,IAAI,KAAKP,KAAK,EAAE;QACvBC,OAAO,CAACG,IAAI,CAACI,OAAO,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,YAAY,UAAU,CAAC;IAC3D,OAAOwB,QAAQ,CAACN,IAAI;EACtB,CAAC;EAEDQ,WAAW,EAAE,MAAOC,OAInB,IAAK;IACJ,MAAMH,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,YAAY,WAAW,EAAE;MAAE4B,MAAM,EAAED;IAAQ,CAAC,CAAC;IACjF,OAAOH,QAAQ,CAACN,IAAI;EACtB,CAAC;EAEDW,iBAAiB,EAAE,MAAOC,OAAe,IAAK;IAC5C,MAAMN,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,YAAY,aAAa8B,OAAO,UAAU,CAAC;IAC/E,OAAON,QAAQ,CAACN,IAAI;EACtB,CAAC;EAEDa,uBAAuB,EAAE,MAAAA,CAAOD,OAAe,EAAEZ,IAGhD,KAAK;IACJ,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAACiC,IAAI,CAAC,aAAaF,OAAO,qBAAqB,EAAEZ,IAAI,CAAC;IAClF,OAAOM,QAAQ,CAACN,IAAI;EACtB,CAAC;EAEDe,wBAAwB,EAAE,MAAAA,CAAOH,OAAe,EAAEZ,IAIjD,KAAK;IACJ,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAACiC,IAAI,CAAC,aAAaF,OAAO,sBAAsB,EAAEZ,IAAI,CAAC;IACnF,OAAOM,QAAQ,CAACN,IAAI;EACtB,CAAC;EAEDgB,mBAAmB,EAAE,MAAAA,CAAOJ,OAAe,EAAEZ,IAG5C,KAAK;IACJ,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAACiC,IAAI,CAAC,aAAaF,OAAO,iBAAiB,EAAEZ,IAAI,CAAC;IAC9E,OAAOM,QAAQ,CAACN,IAAI;EACtB,CAAC;EAED;EACA,MAAMiB,yBAAyBA,CAACjB,IAAyB,EAAE;IACzD,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAACiC,IAAI,CAC/B,GAAGhC,YAAY,iCAAiC,EAChDkB,IACF,CAAC;IACD,OAAOM,QAAQ,CAACN,IAAI;EACtB,CAAC;EAED,MAAMkB,iBAAiBA,CAACC,SAA+B,GAAG,IAAI,EAAE;IAC9D,MAAMb,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,GAAGzB,YAAY,4BAA4B,EAC3C;MAAE4B,MAAM,EAAE;QAAES;MAAU;IAAE,CAC1B,CAAC;IACD,OAAOb,QAAQ,CAACN,IAAI;EACtB,CAAC;EAED,MAAMoB,kBAAkBA,CAACC,eAAuB,EAAE;IAChD,MAAMf,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,GAAGzB,YAAY,uBAAuBuC,eAAe,WACvD,CAAC;IACD,OAAOf,QAAQ,CAACN,IAAI;EACtB,CAAC;EAED,MAAMsB,mBAAmBA,CACvBV,OAAe,EACfW,OAKC,GAAG,CAAC,CAAC,EACN;IACA,MAAMjB,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,GAAGzB,YAAY,aAAa8B,OAAO,YAAY,EAC/C;MAAEF,MAAM,EAAEa;IAAQ,CACpB,CAAC;IACD,OAAOjB,QAAQ,CAACN,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}