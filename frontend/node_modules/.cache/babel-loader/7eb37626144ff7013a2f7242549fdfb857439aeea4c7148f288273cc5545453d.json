{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { pioneerApi } from '../services/api';\nimport { usePioneer } from '../context/PioneerContext';\nexport const usePioneerData = () => {\n  _s();\n  const {\n    filters\n  } = usePioneer();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pioneers, setPioneers] = useState([]);\n  const fetchPioneers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneers(filters);\n      setPioneers(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer data');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n  useEffect(() => {\n    fetchPioneers();\n  }, [fetchPioneers]);\n  return {\n    loading,\n    error,\n    pioneers,\n    refresh: fetchPioneers\n  };\n};\n_s(usePioneerData, \"5smM7RcuARfpPdYLTK5HbsbprRY=\", false, function () {\n  return [usePioneer];\n});\nexport const usePioneerMetrics = address => {\n  _s2();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [metrics, setMetrics] = useState(null);\n  const fetchMetrics = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneerMetrics(address);\n      setMetrics(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer metrics');\n    } finally {\n      setLoading(false);\n    }\n  }, [address]);\n  useEffect(() => {\n    fetchMetrics();\n  }, [fetchMetrics]);\n  return {\n    loading,\n    error,\n    metrics,\n    refresh: fetchMetrics\n  };\n};\n_s2(usePioneerMetrics, \"BGUns4a6y0Z4ox6WCDRMMvDJY9o=\");\nexport const usePioneerActivity = address => {\n  _s3();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const recordProtocolDiscovery = async (protocol, success) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordProtocolDiscovery(address, {\n        protocol,\n        success\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record protocol discovery');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const recordStrategyDeployment = async (type, success, roi) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordStrategyDeployment(address, {\n        type,\n        success,\n        roi\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record strategy deployment');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateChainActivity = async (chain, success) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.updateChainActivity(address, {\n        chain,\n        success\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to update chain activity');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    recordProtocolDiscovery,\n    recordStrategyDeployment,\n    updateChainActivity,\n    loading,\n    error\n  };\n};\n_s3(usePioneerActivity, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["useState","useEffect","useCallback","pioneerApi","usePioneer","usePioneerData","_s","filters","loading","setLoading","error","setError","pioneers","setPioneers","fetchPioneers","data","getPioneers","err","Error","message","refresh","usePioneerMetrics","address","_s2","metrics","setMetrics","fetchMetrics","getPioneerMetrics","usePioneerActivity","_s3","recordProtocolDiscovery","protocol","success","recordStrategyDeployment","type","roi","updateChainActivity","chain"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/hooks/usePioneerData.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { pioneerApi } from '../services/api';\nimport { PioneerCategory, PioneerMetrics } from '../types';\nimport { usePioneer } from '../context/PioneerContext';\n\ninterface UsePioneerDataReturn {\n  loading: boolean;\n  error: string | null;\n  pioneers: Array<{\n    address: string;\n    metrics: PioneerMetrics;\n    categories: PioneerCategory[];\n  }>;\n  refresh: () => Promise<void>;\n}\n\nexport const usePioneerData = (): UsePioneerDataReturn => {\n  const { filters } = usePioneer();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [pioneers, setPioneers] = useState<UsePioneerDataReturn['pioneers']>([]);\n\n  const fetchPioneers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneers(filters);\n      setPioneers(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer data');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    fetchPioneers();\n  }, [fetchPioneers]);\n\n  return {\n    loading,\n    error,\n    pioneers,\n    refresh: fetchPioneers\n  };\n};\n\ninterface UsePioneerMetricsReturn {\n  loading: boolean;\n  error: string | null;\n  metrics: PioneerMetrics | null;\n  refresh: () => Promise<void>;\n}\n\nexport const usePioneerMetrics = (address: string): UsePioneerMetricsReturn => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [metrics, setMetrics] = useState<PioneerMetrics | null>(null);\n\n  const fetchMetrics = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await pioneerApi.getPioneerMetrics(address);\n      setMetrics(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch pioneer metrics');\n    } finally {\n      setLoading(false);\n    }\n  }, [address]);\n\n  useEffect(() => {\n    fetchMetrics();\n  }, [fetchMetrics]);\n\n  return {\n    loading,\n    error,\n    metrics,\n    refresh: fetchMetrics\n  };\n};\n\ninterface UsePioneerActivityReturn {\n  recordProtocolDiscovery: (protocol: string, success: boolean) => Promise<void>;\n  recordStrategyDeployment: (type: string, success: boolean, roi?: number) => Promise<void>;\n  updateChainActivity: (chain: string, success: boolean) => Promise<void>;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const usePioneerActivity = (address: string): UsePioneerActivityReturn => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const recordProtocolDiscovery = async (protocol: string, success: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordProtocolDiscovery(address, { protocol, success });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record protocol discovery');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recordStrategyDeployment = async (type: string, success: boolean, roi?: number) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.recordStrategyDeployment(address, { type, success, roi });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to record strategy deployment');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateChainActivity = async (chain: string, success: boolean) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await pioneerApi.updateChainActivity(address, { chain, success });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to update chain activity');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    recordProtocolDiscovery,\n    recordStrategyDeployment,\n    updateChainActivity,\n    loading,\n    error\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}