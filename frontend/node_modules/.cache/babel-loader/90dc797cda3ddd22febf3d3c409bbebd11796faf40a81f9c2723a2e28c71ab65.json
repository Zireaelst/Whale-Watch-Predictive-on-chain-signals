{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import{pioneerApi}from'../services/api';import notificationService from'../services/NotificationService';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={signals:[],wallets:[],isConnected:false,error:null};const AppContext=/*#__PURE__*/createContext(undefined);function appReducer(state,action){switch(action.type){case'SET_SIGNALS':return{...state,signals:action.payload};case'ADD_SIGNAL':return{...state,signals:[action.payload,...state.signals]};case'SET_WALLETS':return{...state,wallets:action.payload};case'ADD_WALLET':return{...state,wallets:[...state.wallets,action.payload]};case'REMOVE_WALLET':return{...state,wallets:state.wallets.filter(w=>w.address!==action.payload)};case'SET_CONNECTION':return{...state,isConnected:action.payload};case'SET_ERROR':return{...state,error:action.payload};default:return state;}}export function AppProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(appReducer,initialState);useEffect(()=>{// Initialize notification service\nnotificationService.initialize();// Initialize WebSocket connection\n// Set up WebSocket event handlers\npioneerApi.addMessageHandler('new_signal',data=>{const signal=data.signal;dispatch({type:'ADD_SIGNAL',payload:signal});notificationService.notifyNewSignal(signal);});pioneerApi.addMessageHandler('connection_status',data=>{const isConnected=data.connected;dispatch({type:'SET_CONNECTION',payload:isConnected});notificationService.notifyConnectionStatus(isConnected);});// Load initial data\nconst loadInitialData=async()=>{try{const signalsData=await pioneerApi.getSignals();dispatch({type:'SET_SIGNALS',payload:signalsData.signals});// Initialize with empty wallets array for now\ndispatch({type:'SET_WALLETS',payload:[]});}catch(error){dispatch({type:'SET_ERROR',payload:'Failed to load initial data'});}};loadInitialData();// Cleanup\nreturn()=>{// Close WebSocket connection if it exists\nconst ws=pioneerApi.connectWebSocket();ws.close();};},[]);return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,dispatch},children:children});}export function useApp(){const context=useContext(AppContext);if(context===undefined){throw new Error('useApp must be used within an AppProvider');}return context;}export function useSignals(){const{state}=useApp();return state.signals;}export function useWallets(){const{state}=useApp();return state.wallets;}export function useConnection(){const{state}=useApp();return state.isConnected;}export function useAppError(){const{state}=useApp();return state.error;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","pioneerApi","notificationService","jsx","_jsx","initialState","signals","wallets","isConnected","error","AppContext","undefined","appReducer","state","action","type","payload","filter","w","address","AppProvider","_ref","children","dispatch","initialize","addMessageHandler","data","signal","notifyNewSignal","connected","notifyConnectionStatus","loadInitialData","signalsData","getSignals","ws","connectWebSocket","close","Provider","value","useApp","context","Error","useSignals","useWallets","useConnection","useAppError"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { Signal } from '../types';\nimport { pioneerApi } from '../services/api';\nimport notificationService from '../services/NotificationService';\n\ninterface Wallet {\n  address: string;\n  // Add other wallet properties as needed\n}\n\ninterface AppState {\n  signals: Signal[];\n  wallets: Wallet[];\n  isConnected: boolean;\n  error: string | null;\n}\n\ntype AppAction =\n  | { type: 'SET_SIGNALS'; payload: Signal[] }\n  | { type: 'ADD_SIGNAL'; payload: Signal }\n  | { type: 'SET_WALLETS'; payload: Wallet[] }\n  | { type: 'ADD_WALLET'; payload: Wallet }\n  | { type: 'REMOVE_WALLET'; payload: string }\n  | { type: 'SET_CONNECTION'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null };\n\nconst initialState: AppState = {\n  signals: [],\n  wallets: [],\n  isConnected: false,\n  error: null,\n};\n\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AppAction>;\n} | undefined>(undefined);\n\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case 'SET_SIGNALS':\n      return { ...state, signals: action.payload };\n    case 'ADD_SIGNAL':\n      return { ...state, signals: [action.payload, ...state.signals] };\n    case 'SET_WALLETS':\n      return { ...state, wallets: action.payload };\n    case 'ADD_WALLET':\n      return { ...state, wallets: [...state.wallets, action.payload] };\n    case 'REMOVE_WALLET':\n      return {\n        ...state,\n        wallets: state.wallets.filter((w) => w.address !== action.payload),\n      };\n    case 'SET_CONNECTION':\n      return { ...state, isConnected: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function AppProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    // Initialize notification service\n    notificationService.initialize();\n\n    // Initialize WebSocket connection\n\n\n    // Set up WebSocket event handlers\n    interface NewSignalData {\n      signal: Signal;\n    }\n\n    pioneerApi.addMessageHandler<NewSignalData>('new_signal', (data: NewSignalData) => {\n      const signal: Signal = data.signal;\n      dispatch({ type: 'ADD_SIGNAL', payload: signal });\n      notificationService.notifyNewSignal(signal);\n    });\n\n    interface ConnectionStatusData {\n      connected: boolean;\n    }\n\n        pioneerApi.addMessageHandler<ConnectionStatusData>('connection_status', (data: ConnectionStatusData) => {\n          const isConnected: boolean = data.connected;\n          dispatch({ type: 'SET_CONNECTION', payload: isConnected });\n          notificationService.notifyConnectionStatus(isConnected);\n        });\n\n    // Load initial data\n    const loadInitialData = async () => {\n      try {\n        const signalsData = await pioneerApi.getSignals();\n        dispatch({ type: 'SET_SIGNALS', payload: signalsData.signals });\n        // Initialize with empty wallets array for now\n        dispatch({ type: 'SET_WALLETS', payload: [] });\n      } catch (error) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load initial data',\n        });\n      }\n    };\n\n    loadInitialData();\n\n    // Cleanup\n    return () => {\n      // Close WebSocket connection if it exists\n      const ws = pioneerApi.connectWebSocket();\n      ws.close();\n    };\n  }, []);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useApp() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n\nexport function useSignals() {\n  const { state } = useApp();\n  return state.signals;\n}\n\nexport function useWallets() {\n  const { state } = useApp();\n  return state.wallets;\n}\n\nexport function useConnection() {\n  const { state } = useApp();\n  return state.isConnected;\n}\n\nexport function useAppError() {\n  const { state } = useApp();\n  return state.error;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}