{"ast":null,"code":"// Map of audio files for different notification types\nconst audioFiles={notification:'/sounds/notification.mp3',alert:'/sounds/alert.mp3',connect:'/sounds/connect.mp3',disconnect:'/sounds/disconnect.mp3',pioneer_discovery:'/audio/pioneer_discovery.mp3',pioneer_strategy:'/audio/pioneer_strategy.mp3',pioneer_success:'/audio/pioneer_success.mp3',pioneer_warning:'/audio/pioneer_warning.mp3'};class AudioManager{constructor(){this.audioElements=void 0;this.enabled=void 0;this.maxConcurrentPlays=3;this.playingCount=0;this.playQueue=[];this.audioElements=new Map();this.enabled=true;}async initialize(){// Clean up existing audio elements first\nthis.dispose();try{// Initialize audio elements\nfor(const[key,path]of Object.entries(audioFiles)){const audio=new Audio(path);audio.preload='auto';// Add event listeners for proper cleanup\naudio.addEventListener('ended',()=>{this.playingCount--;this.processQueue();});audio.addEventListener('error',e=>{console.error(`Audio error for ${key}:`,e);this.playingCount--;this.processQueue();});this.audioElements.set(key,audio);}}catch(error){console.error('Failed to initialize audio:',error);this.enabled=false;}}async processQueue(){if(this.playQueue.length===0||this.playingCount>=this.maxConcurrentPlays){return;}const next=this.playQueue.shift();if(next){await this.playNotification(next.type,next.volume);}}async playNotification(type){let volume=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!this.enabled)return;const audio=this.audioElements.get(type);if(!audio)return;if(this.playingCount>=this.maxConcurrentPlays){this.playQueue.push({type,volume});return;}try{audio.volume=Math.min(Math.max(volume,0),1);this.playingCount++;await audio.play();}catch(error){console.error('Failed to play notification sound:',error);this.playingCount--;this.processQueue();}}dispose(){this.playQueue=[];this.playingCount=0;for(const audio of this.audioElements.values()){audio.pause();audio.src='';audio.remove();}this.audioElements.clear();}toggleSound(enabled){this.enabled=enabled!==null&&enabled!==void 0?enabled:!this.enabled;if(!this.enabled){// Stop all playing sounds when disabled\nfor(const audio of this.audioElements.values()){audio.pause();audio.currentTime=0;}this.playQueue=[];this.playingCount=0;}}playPioneerNotification(category,confidence){if(!this.enabled)return;// Play different sounds based on pioneer category and confidence\nif(confidence>=0.9){this.playNotification('pioneer_success',0.7);}else if(confidence>=0.7){this.playNotification('pioneer_discovery',0.6);}else if(confidence>=0.5){this.playNotification('pioneer_strategy',0.5);}else{this.playNotification('pioneer_warning',0.4);}}}export const audioManager=new AudioManager();","map":{"version":3,"names":["audioFiles","notification","alert","connect","disconnect","pioneer_discovery","pioneer_strategy","pioneer_success","pioneer_warning","AudioManager","constructor","audioElements","enabled","maxConcurrentPlays","playingCount","playQueue","Map","initialize","dispose","key","path","Object","entries","audio","Audio","preload","addEventListener","processQueue","e","console","error","set","length","next","shift","playNotification","type","volume","arguments","undefined","get","push","Math","min","max","play","values","pause","src","remove","clear","toggleSound","currentTime","playPioneerNotification","category","confidence","audioManager"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/utils/audioUtils.ts"],"sourcesContent":["// Map of audio files for different notification types\nconst audioFiles = {\n  notification: '/sounds/notification.mp3',\n  alert: '/sounds/alert.mp3',\n  connect: '/sounds/connect.mp3',\n  disconnect: '/sounds/disconnect.mp3',\n  pioneer_discovery: '/audio/pioneer_discovery.mp3',\n  pioneer_strategy: '/audio/pioneer_strategy.mp3',\n  pioneer_success: '/audio/pioneer_success.mp3',\n  pioneer_warning: '/audio/pioneer_warning.mp3'\n};\n\ntype NotificationSound = keyof typeof audioFiles;\n\nclass AudioManager {\n  private audioElements: Map<NotificationSound, HTMLAudioElement>;\n  private enabled: boolean;\n  private maxConcurrentPlays = 3;\n  private playingCount = 0;\n  private playQueue: Array<{ type: NotificationSound; volume: number }> = [];\n\n  constructor() {\n    this.audioElements = new Map();\n    this.enabled = true;\n  }\n\n  public async initialize() {\n    // Clean up existing audio elements first\n    this.dispose();\n\n    try {\n      // Initialize audio elements\n      for (const [key, path] of Object.entries(audioFiles)) {\n        const audio = new Audio(path);\n        audio.preload = 'auto';\n        \n        // Add event listeners for proper cleanup\n        audio.addEventListener('ended', () => {\n          this.playingCount--;\n          this.processQueue();\n        });\n        \n        audio.addEventListener('error', (e) => {\n          console.error(`Audio error for ${key}:`, e);\n          this.playingCount--;\n          this.processQueue();\n        });\n        \n        this.audioElements.set(key as NotificationSound, audio);\n      }\n    } catch (error) {\n      console.error('Failed to initialize audio:', error);\n      this.enabled = false;\n    }\n  }\n\n  private async processQueue() {\n    if (this.playQueue.length === 0 || this.playingCount >= this.maxConcurrentPlays) {\n      return;\n    }\n\n    const next = this.playQueue.shift();\n    if (next) {\n      await this.playNotification(next.type, next.volume);\n    }\n  }\n\n  public async playNotification(type: NotificationSound, volume: number = 1) {\n    if (!this.enabled) return;\n\n    const audio = this.audioElements.get(type);\n    if (!audio) return;\n\n    if (this.playingCount >= this.maxConcurrentPlays) {\n      this.playQueue.push({ type, volume });\n      return;\n    }\n\n    try {\n      audio.volume = Math.min(Math.max(volume, 0), 1);\n      this.playingCount++;\n      await audio.play();\n    } catch (error) {\n      console.error('Failed to play notification sound:', error);\n      this.playingCount--;\n      this.processQueue();\n    }\n  }\n\n  public dispose() {\n    this.playQueue = [];\n    this.playingCount = 0;\n    \n    for (const audio of this.audioElements.values()) {\n      audio.pause();\n      audio.src = '';\n      audio.remove();\n    }\n    \n    this.audioElements.clear();\n  }\n\n  public toggleSound(enabled?: boolean) {\n    this.enabled = enabled ?? !this.enabled;\n    \n    if (!this.enabled) {\n      // Stop all playing sounds when disabled\n      for (const audio of this.audioElements.values()) {\n        audio.pause();\n        audio.currentTime = 0;\n      }\n      this.playQueue = [];\n      this.playingCount = 0;\n    }\n  }\n\n  public playPioneerNotification(category: string, confidence: number) {\n    if (!this.enabled) return;\n\n    // Play different sounds based on pioneer category and confidence\n    if (confidence >= 0.9) {\n      this.playNotification('pioneer_success', 0.7);\n    } else if (confidence >= 0.7) {\n      this.playNotification('pioneer_discovery', 0.6);\n    } else if (confidence >= 0.5) {\n      this.playNotification('pioneer_strategy', 0.5);\n    } else {\n      this.playNotification('pioneer_warning', 0.4);\n    }\n  }\n}\n\nexport const audioManager = new AudioManager();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}