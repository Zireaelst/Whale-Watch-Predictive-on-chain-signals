{"ast":null,"code":"var _jsxFileName = \"/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.tsx';\nimport { keyboardShortcuts } from './utils/keyboardShortcuts.ts';\nimport notificationService from './services/NotificationService.ts';\nimport { audioManager } from './utils/audioUtils.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function initializeApp() {\n  try {\n    // Initialize notification system\n    await notificationService.initialize();\n\n    // Initialize audio system\n    await audioManager.initialize();\n\n    // Enable keyboard shortcuts\n    keyboardShortcuts.enable();\n\n    // Create root and render app\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  } catch (error) {\n    console.error('Failed to initialize application:', error);\n  }\n}\n\n// Initialize the application\ninitializeApp();\n\n// Cleanup on unload\nwindow.addEventListener('unload', () => {\n  notificationService.cleanup();\n  keyboardShortcuts.cleanup();\n});","map":{"version":3,"names":["React","ReactDOM","App","keyboardShortcuts","notificationService","audioManager","jsxDEV","_jsxDEV","initializeApp","initialize","enable","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","error","console","window","addEventListener","cleanup"],"sources":["/Users/toyguntez/Visual Studio /Whale-Watch-Predictive-on-chain-signals/frontend/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.tsx';\nimport { keyboardShortcuts } from './utils/keyboardShortcuts.ts';\nimport notificationService from './services/NotificationService.ts';\nimport { audioManager } from './utils/audioUtils.ts';\n\nasync function initializeApp() {\n  try {\n    // Initialize notification system\n    await notificationService.initialize();\n    \n    // Initialize audio system\n    await audioManager.initialize();\n\n    // Enable keyboard shortcuts\n    keyboardShortcuts.enable();\n\n    // Create root and render app\n    const root = ReactDOM.createRoot(\n      document.getElementById('root') as HTMLElement\n    );\n\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to initialize application:', error);\n  }\n}\n\n// Initialize the application\ninitializeApp();\n\n// Cleanup on unload\nwindow.addEventListener('unload', () => {\n  notificationService.cleanup();\n  keyboardShortcuts.cleanup();\n});"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,mBAAmB,MAAM,mCAAmC;AACnE,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAeC,aAAaA,CAAA,EAAG;EAC7B,IAAI;IACF;IACA,MAAMJ,mBAAmB,CAACK,UAAU,CAAC,CAAC;;IAEtC;IACA,MAAMJ,YAAY,CAACI,UAAU,CAAC,CAAC;;IAE/B;IACAN,iBAAiB,CAACO,MAAM,CAAC,CAAC;;IAE1B;IACA,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;IAEDH,IAAI,CAACI,MAAM,cACTR,OAAA,CAACP,KAAK,CAACgB,UAAU;MAAAC,QAAA,eACfV,OAAA,CAACL,GAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;AACF;;AAEA;AACAd,aAAa,CAAC,CAAC;;AAEf;AACAgB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;EACtCrB,mBAAmB,CAACsB,OAAO,CAAC,CAAC;EAC7BvB,iBAAiB,CAACuB,OAAO,CAAC,CAAC;AAC7B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}